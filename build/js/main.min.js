/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/blocks/banner.js":
/*!*****************************!*\
  !*** ./js/blocks/banner.js ***!
  \*****************************/
/*! exports provided: banner */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "banner", function() { return banner; });
function banner() {
  var swiper = new Swiper('.banner__slider', {
    loop: true,
    pagination: {
      el: '.swiper-pagination'
    }
  });
}



/***/ }),

/***/ "./js/blocks/cards.js":
/*!****************************!*\
  !*** ./js/blocks/cards.js ***!
  \****************************/
/*! exports provided: cards */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cards", function() { return cards; });
function cards() {
  var cardsSliders = document.querySelectorAll('.cards__slider');

  if (cardsSliders.length) {
    cardsSliders.forEach(function (slider, i) {
      var sliderNavigationButtonNext = slider.querySelector('.navigation-button--next');
      var sliderNavigationButtonPrev = slider.querySelector('.navigation-button--prev');
      var swiper = new Swiper(slider, {
        slidesPerView: 'auto',
        loop: true,
        navigation: {
          nextEl: sliderNavigationButtonNext,
          prevEl: sliderNavigationButtonPrev
        },
        on: {
          activeIndexChange: function activeIndexChange() {
            if (this.realIndex === 0 && document.documentElement.clientWidth < 768) {
              sliderNavigationButtonPrev.style.opacity = '0';
            } else {
              sliderNavigationButtonPrev.style.opacity = '1';
            }
          }
        }
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/date-select.js":
/*!**********************************!*\
  !*** ./js/blocks/date-select.js ***!
  \**********************************/
/*! exports provided: dateSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dateSelect", function() { return dateSelect; });
function dateSelect() {
  var dateSelects = document.querySelectorAll('.date-select');

  if (dateSelects.length) {
    dateSelects.forEach(function (select) {
      select.addEventListener('change', function () {
        if (new Date(select.value).toLocaleDateString() === 'Invalid Date') {
          select.dataset.value = select.value === '' ? 'Все' : select.value;
        } else {
          select.dataset.value = select.value === '' ? 'Все' : new Date(select.value).toLocaleDateString();
        }
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/header-menu.js":
/*!**********************************!*\
  !*** ./js/blocks/header-menu.js ***!
  \**********************************/
/*! exports provided: headerMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "headerMenu", function() { return headerMenu; });
function headerMenu() {
  var header = document.querySelector('.header');
  var headerHamburger = document.querySelector('.header__hamburger');
  var headerMenuButton = document.querySelector('.header__menu-button');
  var headerSubmenu = document.querySelector('.header__submenu');
  headerHamburger === null || headerHamburger === void 0 ? void 0 : headerHamburger.addEventListener('click', function () {
    headerHamburger.classList.toggle('is-active');
    header.classList.toggle('header--active');
    document.body.classList.toggle('scroll-lock');
  });

  if (headerMenuButton) {
    document.addEventListener('click', function (e) {
      if (!e.target.closest('.header__submenu') && headerSubmenu.classList.contains('header__submenu--active')) {
        headerSubmenu.classList.remove('header__submenu--active');
      }
    });
    headerMenuButton.addEventListener('click', function (e) {
      headerSubmenu.classList.toggle('header__submenu--active');
      e.stopPropagation();
    });
  }
}



/***/ }),

/***/ "./js/blocks/info-page.js":
/*!********************************!*\
  !*** ./js/blocks/info-page.js ***!
  \********************************/
/*! exports provided: infoPage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "infoPage", function() { return infoPage; });
function infoPage() {
  var infoPageSliders = document.querySelectorAll('.info-page__slider');

  if (infoPageSliders.length) {
    infoPageSliders.forEach(function (slider, i) {
      var sliderNavigationButtonNext = slider.querySelector('.navigation-button--next');
      var sliderNavigationButtonPrev = slider.querySelector('.navigation-button--prev');
      var swiper = new Swiper(slider, {
        slidesPerView: 'auto',
        navigation: {
          nextEl: sliderNavigationButtonNext,
          prevEl: sliderNavigationButtonPrev
        },
        on: {
          activeIndexChange: function activeIndexChange() {
            if (this.realIndex === 0 && document.documentElement.clientWidth < 768) {
              sliderNavigationButtonPrev.style.opacity = '0';
            } else {
              sliderNavigationButtonPrev.style.opacity = '1';
            }
          }
        }
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/instructors.js":
/*!**********************************!*\
  !*** ./js/blocks/instructors.js ***!
  \**********************************/
/*! exports provided: instructors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "instructors", function() { return instructors; });
function instructors() {
  var instructorsSliders = document.querySelectorAll('.instructors__slider');

  if (instructorsSliders.length) {
    instructorsSliders.forEach(function (slider, i) {
      var sliderNavigationButtonNext = slider.querySelector('.navigation-button--next');
      var sliderNavigationButtonPrev = slider.querySelector('.navigation-button--prev');
      var swiper = new Swiper(slider, {
        slidesPerView: 'auto',
        loop: false,
        navigation: {
          nextEl: sliderNavigationButtonNext,
          prevEl: sliderNavigationButtonPrev
        },
        on: {
          activeIndexChange: function activeIndexChange() {
            if (this.realIndex === 0 && document.documentElement.clientWidth < 768) {
              sliderNavigationButtonPrev.style.opacity = '0';
            } else {
              sliderNavigationButtonPrev.style.opacity = '1';
            }
          }
        }
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/make-an-appoinment.js":
/*!*****************************************!*\
  !*** ./js/blocks/make-an-appoinment.js ***!
  \*****************************************/
/*! exports provided: makeAnAppoinment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "makeAnAppoinment", function() { return makeAnAppoinment; });
function makeAnAppoinment() {
  var makeAnAppoinmentModal = document.querySelector("[data-modal='make-an-appoinment']");
  var makeAnAppoinmentForm = makeAnAppoinmentModal === null || makeAnAppoinmentModal === void 0 ? void 0 : makeAnAppoinmentModal.querySelector("form");
  var successModal = document.querySelector("[data-modal='success']");
  var successModalForm = successModal === null || successModal === void 0 ? void 0 : successModal.querySelector("form");

  if (makeAnAppoinmentModal) {
    makeAnAppoinmentForm.addEventListener('submit', function (e) {
      e.preventDefault();
      modals.close("make-an-appoinment");
      var makeAnAppoinmentFormTel = makeAnAppoinmentForm === null || makeAnAppoinmentForm === void 0 ? void 0 : makeAnAppoinmentForm.querySelector("input[type='tel']");
      var modalSuccessTelephone = document.querySelector('.modal__success-telephone');
      modalSuccessTelephone.textContent = makeAnAppoinmentFormTel.value;
      modals.open("success");
      makeAnAppoinmentForm.reset();
    });
  }

  successModalForm === null || successModalForm === void 0 ? void 0 : successModalForm.addEventListener('submit', function (e) {
    e.preventDefault();
  });
}



/***/ }),

/***/ "./js/blocks/mask-telephone.js":
/*!*************************************!*\
  !*** ./js/blocks/mask-telephone.js ***!
  \*************************************/
/*! exports provided: maskTelephone */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "maskTelephone", function() { return maskTelephone; });
function maskTelephone() {
  [].forEach.call(document.querySelectorAll("input[type='tel']"), function (input) {
    var keyCode;

    function mask(event) {
      event.keyCode && (keyCode = event.keyCode);
      var pos = this.selectionStart;
      if (pos < 3) event.preventDefault();
      var matrix = "+7 (___) ___ ____",
          i = 0,
          def = matrix.replace(/\D/g, ""),
          val = this.value.replace(/\D/g, ""),
          new_value = matrix.replace(/[_\d]/g, function (a) {
        return i < val.length ? val.charAt(i++) || def.charAt(i) : a;
      });
      i = new_value.indexOf("_");

      if (i != -1) {
        i < 5 && (i = 3);
        new_value = new_value.slice(0, i);
      }

      var reg = matrix.substr(0, this.value.length).replace(/_+/g, function (a) {
        return "\\d{1," + a.length + "}";
      }).replace(/[+()]/g, "\\$&");
      reg = new RegExp("^" + reg + "$");
      if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;
      if (event.type == "blur" && this.value.length < 5) this.value = "";
    }

    input.addEventListener("input", mask, false);
    input.addEventListener("focus", mask, false);
    input.addEventListener("blur", mask, false);
    input.addEventListener("keydown", mask, false);
  });
}



/***/ }),

/***/ "./js/blocks/profile.js":
/*!******************************!*\
  !*** ./js/blocks/profile.js ***!
  \******************************/
/*! exports provided: profile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "profile", function() { return profile; });
function profile() {
  var profile = document.querySelector('.profile');
  var profileEdit = document.querySelector('.profile__edit');
  var profileSubmit = document.querySelector('.profile__submit');

  if (profile) {
    profile.addEventListener('submit', function (e) {
      e.preventDefault();
    });
    profileEdit === null || profileEdit === void 0 ? void 0 : profileEdit.addEventListener('click', function () {
      profile.classList.add('profile--edit');
    });
    profileSubmit.addEventListener('click', function () {
      profile.submit();
    });
  }
}



/***/ }),

/***/ "./js/blocks/reviews.js":
/*!******************************!*\
  !*** ./js/blocks/reviews.js ***!
  \******************************/
/*! exports provided: reviews */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reviews", function() { return reviews; });
function reviews() {
  var reviewsSliders = document.querySelectorAll('.reviews__slider');

  if (reviewsSliders.length) {
    reviewsSliders.forEach(function (slider, i) {
      var sliderNavigationButtonNext = slider.querySelector('.navigation-button--next');
      var sliderNavigationButtonPrev = slider.querySelector('.navigation-button--prev');
      var swiper = new Swiper(slider, {
        slidesPerView: 'auto',
        loop: true,
        navigation: {
          nextEl: sliderNavigationButtonNext,
          prevEl: sliderNavigationButtonPrev
        },
        on: {
          activeIndexChange: function activeIndexChange() {
            if (this.realIndex === 0 && document.documentElement.clientWidth < 768) {
              sliderNavigationButtonPrev.style.opacity = '0';
            } else {
              sliderNavigationButtonPrev.style.opacity = '1';
            }
          }
        }
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/search-form.js":
/*!**********************************!*\
  !*** ./js/blocks/search-form.js ***!
  \**********************************/
/*! exports provided: searchForm */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchForm", function() { return searchForm; });
function searchForm() {
  var searchForms = document.querySelectorAll('.search__form');
  var searchFormFiltersBtn = document.querySelector('.search__form-filters-btn');
  var searchFormBackBtn = document.querySelector('.search__form-back-btn');

  if (searchForms.length) {
    searchForms.forEach(function (form) {
      form.addEventListener('submit', function (e) {
        e.preventDefault();
      });
      searchFormFiltersBtn.addEventListener('click', function () {
        form.classList.add('search__form--active');
        document.body.classList.add('scroll-lock');
      });
      searchFormBackBtn.addEventListener('click', function () {
        form.classList.remove('search__form--active');
        document.body.classList.remove('scroll-lock');
      });
    });
  }
}



/***/ }),

/***/ "./js/blocks/timetable.js":
/*!********************************!*\
  !*** ./js/blocks/timetable.js ***!
  \********************************/
/*! exports provided: timetable */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timetable", function() { return timetable; });
function timetable() {
  var timetable = document.querySelector('.timetable');
  var timetableEdit = document.querySelector('.timetable__edit');
  var timetableSubmit = document.querySelector('.timetable__submit');

  if (timetable) {
    timetable.addEventListener('submit', function (e) {
      e.preventDefault();
    });
    timetableEdit === null || timetableEdit === void 0 ? void 0 : timetableEdit.addEventListener('click', function () {
      timetable.classList.add('timetable--edit');
    });
    timetableSubmit === null || timetableSubmit === void 0 ? void 0 : timetableSubmit.addEventListener('click', function () {
      timetable.submit();
    });
  }
}



/***/ }),

/***/ "./js/blocks/upload-files.js":
/*!***********************************!*\
  !*** ./js/blocks/upload-files.js ***!
  \***********************************/
/*! exports provided: uploadFiles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uploadFiles", function() { return uploadFiles; });
function uploadFiles() {
  var uploadFilesInputs = document.querySelectorAll('.upload-files:not(.profile__photo) .upload-files__input');

  if (uploadFilesInputs.length) {
    uploadFilesInputs.forEach(function (input) {
      var filesList = input.closest('.upload-files').querySelector('.upload-files__list:not(.upload-files__list--uploaded)');
      var filesLabel = input.closest('.upload-files').querySelector('.upload-files__label');
      input.addEventListener("change", function handleFiles() {
        var fileList = this.files;
        var listUpdated = false;
        var newList = new DataTransfer();

        for (var i = 0; i < fileList.length; i++) {
          if (fileList[i].size / 1048576 < 5) {
            newList.items.add(fileList[i]);
          } else {
            listUpdated = true;
          }
        }

        var htmlfileList = [];

        for (var _i = 0; _i < fileList.length; _i++) {
          var newFile = "<li class=\"upload-files__file\">\n            <svg class=\"upload-files__file-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n              <use xlink:href=\"#upload-file\"></use>\n            </svg>\n            <p class=\"upload-files__file-name\">".concat(fileList[_i].name, "</p>\n            <button class=\"upload-files__file-delete\" data-file-name=\"").concat(fileList[_i].name, "\">\n              <svg class=\"upload-files__file-delete-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n                <use xlink:href=\"#file-delete\"></use>\n              </svg>\n            </button>\n          </li>");
          htmlfileList.push(newFile);
        }

        filesList.innerHTML = htmlfileList.join('');

        if (listUpdated) {
          this.files = newList.files;
          this.dispatchEvent(new Event('change'));
        }
      });
      document.addEventListener('click', function (e) {
        var btn = e.target.closest('.upload-files__file:not(.upload-files__file--uploaded) .upload-files__file-delete');

        if (btn) {
          e.preventDefault();
          var newList = new DataTransfer();

          for (var i = 0; i < input.files.length; i++) {
            if (input.files[i].name != btn.dataset.fileName) {
              newList.items.add(input.files[i]);
            }
          }

          input.files = newList.files;
          input.dispatchEvent(new Event('change'));
        }
      });
      filesLabel.addEventListener("dragenter", dragenter, false);
      filesLabel.addEventListener("dragover", dragover, false);
      filesLabel.addEventListener("drop", drop, false);

      function dragenter(e) {
        e.stopPropagation();
        e.preventDefault();
      }

      function dragover(e) {
        e.stopPropagation();
        e.preventDefault();
      }

      function drop(e) {
        e.stopPropagation();
        e.preventDefault();
        var dt = e.dataTransfer;
        var files = dt.files;
        input.files = files;
        input.dispatchEvent(new Event('change'));
      }
    });
  }
}



/***/ }),

/***/ "./js/blocks/upload-profile-photo.js":
/*!*******************************************!*\
  !*** ./js/blocks/upload-profile-photo.js ***!
  \*******************************************/
/*! exports provided: uploadProfilePhoto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "uploadProfilePhoto", function() { return uploadProfilePhoto; });
function uploadProfilePhoto() {
  var uploadProfilePhotoInput = document.querySelector('.profile__photo .upload-files__input');
  var uploadProfilePhotoLabel = document.querySelector('.profile__photo .upload-files__label');
  var profilePhotoImg = document.querySelector('.profile__photo-img');
  var profilePhotoText = document.querySelector('.profile__photo-text');

  if (uploadProfilePhotoInput) {
    var dragenter = function dragenter(e) {
      e.stopPropagation();
      e.preventDefault();
    };

    var dragover = function dragover(e) {
      e.stopPropagation();
      e.preventDefault();
    };

    var drop = function drop(e) {
      e.stopPropagation();
      e.preventDefault();
      var dt = e.dataTransfer;
      var files = dt.files;
      uploadProfilePhotoInput.files = files;
      uploadProfilePhotoInput.dispatchEvent(new Event('change'));
    };

    uploadProfilePhotoInput.addEventListener("change", function handleFiles(event) {
      var target = event.target;

      if (!FileReader) {
        return;
      }

      if (!target.files.length) {
        alert('Ничего не загружено');
        return;
      }

      var fileReader = new FileReader();

      fileReader.onload = function () {
        profilePhotoImg.src = fileReader.result;
      };

      fileReader.readAsDataURL(target.files[0]);

      if (target.files[0]) {
        profilePhotoText.style.display = 'none';
      } else {
        profilePhotoText.style.display = 'block';
      }
    });
    uploadProfilePhotoLabel.addEventListener("dragenter", dragenter, false);
    uploadProfilePhotoLabel.addEventListener("dragover", dragover, false);
    uploadProfilePhotoLabel.addEventListener("drop", drop, false);
  }
}



/***/ }),

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/modals/init-modals */ "./js/modules/modals/init-modals.js");
/* harmony import */ var _modules_select_init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/select/init */ "./js/modules/select/init.js");
/* harmony import */ var _blocks_header_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./blocks/header-menu */ "./js/blocks/header-menu.js");
/* harmony import */ var _blocks_banner__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./blocks/banner */ "./js/blocks/banner.js");
/* harmony import */ var _blocks_cards__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./blocks/cards */ "./js/blocks/cards.js");
/* harmony import */ var _blocks_date_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./blocks/date-select */ "./js/blocks/date-select.js");
/* harmony import */ var _blocks_search_form__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./blocks/search-form */ "./js/blocks/search-form.js");
/* harmony import */ var _blocks_instructors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./blocks/instructors */ "./js/blocks/instructors.js");
/* harmony import */ var _blocks_reviews__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./blocks/reviews */ "./js/blocks/reviews.js");
/* harmony import */ var _blocks_info_page__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./blocks/info-page */ "./js/blocks/info-page.js");
/* harmony import */ var _blocks_upload_profile_photo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./blocks/upload-profile-photo */ "./js/blocks/upload-profile-photo.js");
/* harmony import */ var _blocks_upload_files__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./blocks/upload-files */ "./js/blocks/upload-files.js");
/* harmony import */ var _blocks_profile__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./blocks/profile */ "./js/blocks/profile.js");
/* harmony import */ var _blocks_timetable__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./blocks/timetable */ "./js/blocks/timetable.js");
/* harmony import */ var _blocks_make_an_appoinment__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./blocks/make-an-appoinment */ "./js/blocks/make-an-appoinment.js");
/* harmony import */ var _blocks_mask_telephone__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./blocks/mask-telephone */ "./js/blocks/mask-telephone.js");
















 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    Object(_modules_modals_init_modals__WEBPACK_IMPORTED_MODULE_1__["initModals"])();
    Object(_blocks_header_menu__WEBPACK_IMPORTED_MODULE_3__["headerMenu"])();
    Object(_blocks_banner__WEBPACK_IMPORTED_MODULE_4__["banner"])();
    Object(_blocks_cards__WEBPACK_IMPORTED_MODULE_5__["cards"])();
    Object(_blocks_date_select__WEBPACK_IMPORTED_MODULE_6__["dateSelect"])();
    Object(_blocks_search_form__WEBPACK_IMPORTED_MODULE_7__["searchForm"])();
    Object(_blocks_instructors__WEBPACK_IMPORTED_MODULE_8__["instructors"])();
    Object(_blocks_reviews__WEBPACK_IMPORTED_MODULE_9__["reviews"])();
    Object(_blocks_info_page__WEBPACK_IMPORTED_MODULE_10__["infoPage"])();
    Object(_blocks_upload_profile_photo__WEBPACK_IMPORTED_MODULE_11__["uploadProfilePhoto"])();
    Object(_blocks_upload_files__WEBPACK_IMPORTED_MODULE_12__["uploadFiles"])();
    Object(_blocks_profile__WEBPACK_IMPORTED_MODULE_13__["profile"])();
    Object(_blocks_timetable__WEBPACK_IMPORTED_MODULE_14__["timetable"])();
    Object(_blocks_make_an_appoinment__WEBPACK_IMPORTED_MODULE_15__["makeAnAppoinment"])();
    Object(_blocks_mask_telephone__WEBPACK_IMPORTED_MODULE_16__["maskTelephone"])();
  });
}); // ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ }),

/***/ "./js/modules/modals/init-modals.js":
/*!******************************************!*\
  !*** ./js/modules/modals/init-modals.js ***!
  \******************************************/
/*! exports provided: modals, initModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modals", function() { return modals; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initModals", function() { return initModals; });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modals/modals.js");

var modals; // Здесь реализован пример открытия модалки через колбэк закрытия
// const openModalInCloseCallback = (name, context = this) => {
//   context._enableScrolling = false;
//   context._setSettings('default');
//   modals.open(name);
// };
// closeCallback() {
//   openModalInCloseCallback('modal-5');
// },

var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  }
};

var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');

  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }

  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__["Modals"](settings); // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда

  window.modals = modals;
};



/***/ }),

/***/ "./js/modules/modals/modals.js":
/*!*************************************!*\
  !*** ./js/modules/modals/modals.js ***!
  \*************************************/
/*! exports provided: Modals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Modals", function() { return Modals; });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, Modals);

    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__["ScrollLock"]();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__["FocusLock"]();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);

    this._init();
  }

  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;

      if (!this._settings[settingKey]) {
        return;
      }

      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-open-modal]')) {
        return;
      }

      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;

      if (!this._modalName) {
        return;
      }

      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;

      if (!target.closest('[data-close-modal]')) {
        return;
      }

      this.close(target.closest('[data-modal]').dataset.modal);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_stopInteractive",
    value: function _stopInteractive(modal) {
      if (this._stopPlay) {
        modal.querySelectorAll('video, audio').forEach(function (el) {
          return el.pause();
        });
        modal.querySelectorAll('[data-iframe]').forEach(function (el) {
          el.querySelector('iframe').contentWindow.postMessage('{"event": "command", "func": "pauseVideo", "args": ""}', '*');
        });
      }
    }
  }, {
    key: "_autoPlay",
    value: function _autoPlay(modal) {
      modal.querySelectorAll('[data-iframe]').forEach(function (el) {
        var autoPlay = el.closest('[data-auto-play]');

        if (autoPlay) {
          el.querySelector('iframe').contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', '*');
        }
      });
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));

      if (!modal || modal.classList.contains('is-active')) {
        return;
      }

      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');

      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }

      this._setSettings(modalName);

      modal.classList.add('is-active');

      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }

      if (this._openCallback) {
        this._openCallback();
      }

      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }

      setTimeout(function () {
        _this._addListeners(modal);

        _this._autoPlay(modal);

        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;

      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);

      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }

      if (this._lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }

      modal.classList.remove('is-active');

      this._removeListeners(modal);

      this._stopInteractive(modal);

      if (this._closeCallback) {
        this._closeCallback();
      }

      if (this._enableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }

      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);

      this._setSettings('default');

      this._enableScrolling = true;
    }
  }]);

  return Modals;
}();

/***/ }),

/***/ "./js/modules/select/create-select-markup.js":
/*!***************************************************!*\
  !*** ./js/modules/select/create-select-markup.js ***!
  \***************************************************/
/*! exports provided: createNativeSelectMarkup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createNativeSelectMarkup", function() { return createNativeSelectMarkup; });
var createNativeOptionsMarkup = function createNativeOptionsMarkup(items, activeIndex) {
  return items.map(function (el, index) {
    if (activeIndex.length) {
      var currentIndex = activeIndex.find(function (item) {
        return item === index;
      });

      if (currentIndex === index) {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', " selected>").concat(el.text ? "".concat(el.text) : '', "</option>");
      } else {
        return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
      }
    } else {
      return "<option ".concat(el.value ? "value=".concat(el.value) : '', ">").concat(el.text ? "".concat(el.text) : '', "</option>");
    }
  }).join('\n');
};

var createNativeSelectMarkup = function createNativeSelectMarkup(_ref) {
  var id = _ref.id,
      items = _ref.items,
      multiple = _ref.multiple,
      name = _ref.name,
      required = _ref.required,
      _ref$activeIndex = _ref.activeIndex,
      activeIndex = _ref$activeIndex === void 0 ? [] : _ref$activeIndex;
  return "<select ".concat(id ? "id='".concat(id, "'") : '', " ").concat(name ? "name='".concat(name, "'") : '', " ").concat(multiple ? 'multiple' : '', " ").concat(required ? 'required' : '', " tabindex=\"-1\" aria-hidden=\"true\">\n            <option value=\"\"></option>\n            ").concat(createNativeOptionsMarkup(items, activeIndex), "\n          </select>");
};

/***/ }),

/***/ "./js/modules/select/custom-select.js":
/*!********************************************!*\
  !*** ./js/modules/select/custom-select.js ***!
  \********************************************/
/*! exports provided: CustomSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomSelect", function() { return CustomSelect; });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./js/modules/select/utils.js");
/* harmony import */ var _create_select_markup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create-select-markup */ "./js/modules/select/create-select-markup.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }



var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);

    this._selects = null;
    this._selectElement = null;
    this._activeIndex = null;
    this._onDocumentClick = this._onDocumentClick.bind(this);
    this._onEscapePress = this._onEscapePress.bind(this);
    this._onSelectItemClick = this._onSelectItemClick.bind(this);
    this._onSelectItemKeydown = this._onSelectItemKeydown.bind(this);
    this._onLastItemKeydown = this._onLastItemKeydown.bind(this);
    this._onSelectClick = this._onSelectClick.bind(this);
    this._onSelectKeydown = this._onSelectKeydown.bind(this);
    window.selectInit = this.init.bind(this);
  }

  _createClass(CustomSelect, [{
    key: "_createMultiString",
    value: function _createMultiString(arr) {
      var str = '';

      if (arr.length) {
        if (arr.length === 1) {
          str = arr[0].innerHTML;
        } else {
          arr.forEach(function (element, index) {
            if (index === arr.length - 1) {
              str += element.innerHTML;
            } else {
              str += "".concat(element.innerHTML, ", ");
            }
          });
        }
      }

      return str;
    }
  }, {
    key: "_setSelectActiveState",
    value: function _setSelectActiveState(multiple, insert, item) {
      var buttonTextBlock = item.querySelector('.custom-select__text');
      var activeItems = item.querySelectorAll('.custom-select__item[aria-selected="true"]');
      var label = item.querySelector('.custom-select__label');

      var str = this._createMultiString(activeItems);

      buttonTextBlock.style.transition = '0s';

      if (label) {
        label.style.transition = '0s';
      }

      setTimeout(function () {
        if (label) {
          label.style.transition = null;
        }

        buttonTextBlock.style.transition = null;
      }, 300);

      if (multiple && insert) {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = str;
      } else if (multiple) {
        return;
      } else {
        item.classList.add('not-empty');
        buttonTextBlock.innerHTML = activeItems[0].innerHTML;
      }
    }
  }, {
    key: "_closeSelect",
    value: function _closeSelect() {
      var activeSelect = document.querySelector('[data-select].is-open');
      document.removeEventListener('click', this._onDocumentClick);
      document.removeEventListener('keydown', this._onEscapePress);

      if (activeSelect) {
        activeSelect.classList.remove('is-open');
      }
    }
  }, {
    key: "_onSelectElementClickAction",
    value: function _onSelectElementClickAction(element, index) {
      var parent = element.closest('.custom-select');
      var multiple = parent.dataset.multiple;
      var insert = parent.dataset.insert;
      var buttonTextBlock = parent.querySelector('.custom-select__text');
      var itemText = element.innerText;
      var options = parent.querySelectorAll('option');
      var select = parent.querySelector('select');
      var changeEv = new CustomEvent('change');
      var inputEv = new CustomEvent('input');
      select.dispatchEvent(changeEv);
      select.dispatchEvent(inputEv);
      var form = select.closest('form');

      if (form) {
        var formChangeEv = new CustomEvent('change');
        var formInputEv = new CustomEvent('input');
        form.dispatchEvent(formChangeEv);
        form.dispatchEvent(formInputEv);
      }

      if (multiple) {
        if (insert === 'true') {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            var activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');

            var str = this._createMultiString(activeItems);

            options[index + 1].selected = false;
            buttonTextBlock.innerText = str;

            if (!str) {
              parent.classList.remove('not-empty');
              parent.classList.remove('is-valid');
            }
          } else {
            element.setAttribute('aria-selected', 'true');

            var _activeItems = parent.querySelectorAll('.custom-select__item[aria-selected="true"]');

            var _str = this._createMultiString(_activeItems);

            buttonTextBlock.innerText = _str;
            parent.classList.add('not-empty');
            parent.classList.add('is-valid');
            options[index + 1].selected = true;
          }
        } else {
          if (element.getAttribute('aria-selected') === 'true') {
            element.setAttribute('aria-selected', 'false');
            options[index + 1].selected = false;
          } else {
            element.setAttribute('aria-selected', 'true');
            options[index + 1].selected = true;
          }
        }
      } else {
        var activeItem = parent.querySelector('.custom-select__item[aria-selected="true"]');

        if (element.getAttribute('aria-selected') === 'true') {
          this._closeSelect();
        } else {
          if (activeItem) {
            activeItem.setAttribute('aria-selected', 'false');
            parent.classList.remove('not-empty');
            parent.classList.remove('is-valid');
          }

          buttonTextBlock.innerText = itemText;
          element.setAttribute('aria-selected', 'true');
          parent.classList.add('not-empty');
          parent.classList.add('is-valid');
          options[index + 1].selected = true;

          this._closeSelect();
        }
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(_ref) {
      var target = _ref.target;

      if (!target.closest('.custom-select')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onEscapePress",
    value: function _onEscapePress(evt) {
      var isEscape = evt.key === 'Escape';

      if (isEscape) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectItemClick",
    value: function _onSelectItemClick(element, index) {
      this._onSelectElementClickAction(element, index);
    }
  }, {
    key: "_onSelectItemKeydown",
    value: function _onSelectItemKeydown(evt, element, index) {
      var isEnter = evt.key === 'Enter';

      if (isEnter) {
        this._onSelectElementClickAction(element, index);
      }
    }
  }, {
    key: "_onLastItemKeydown",
    value: function _onLastItemKeydown(evt) {
      var isTab = evt.key === 'Tab';

      if (isTab) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectClick",
    value: function _onSelectClick(evt) {
      var parent = evt.target.closest('[data-select]');
      var activeSelect = document.querySelector('[data-select].is-open');
      parent.classList.remove('is-invalid');

      if (activeSelect && activeSelect === parent) {
        activeSelect.classList.remove('is-open');
        return;
      }

      if (activeSelect) {
        this._closeSelect();
      }

      document.addEventListener('click', this._onDocumentClick);
      document.addEventListener('keydown', this._onEscapePress);

      if (parent.classList.contains('is-open')) {
        parent.classList.remove('is-open');
      } else {
        parent.classList.add('is-open');
      }
    }
  }, {
    key: "_onSelectKeydown",
    value: function _onSelectKeydown(evt) {
      var parent = evt.target.closest('[data-select]');
      parent.classList.remove('is-invalid');

      if (evt.shiftKey && evt.key === 'Tab' && parent.closest('.is-open')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_setActiveSelectItemsState",
    value: function _setActiveSelectItemsState(multiple, selectItems) {
      var _this = this;

      var flag = true;
      this._activeIndex = [];
      selectItems.forEach(function (item, index) {
        if (multiple) {
          if (item.getAttribute('aria-selected') === 'true') {
            _this._activeIndex.push(index);
          }
        } else {
          if (item.getAttribute('aria-selected') === 'true' && flag) {
            _this._activeIndex.push(index);

            flag = false;
          } else {
            item.setAttribute('aria-selected', 'false');
          }
        }
      });
    }
  }, {
    key: "_createSelectStructure",
    value: function _createSelectStructure(item) {
      var nativeSelect = item.querySelector('select');

      if (nativeSelect) {
        this._selectElement = null;
        return;
      }

      var options = {};
      options.items = [];
      var multiple = item.dataset.multiple;
      var id = item.dataset.id;
      var name = item.dataset.name;
      var required = item.dataset.required;
      var insert = item.dataset.insert;
      var selectItems = item.querySelectorAll('.custom-select__item');

      this._setActiveSelectItemsState(multiple, selectItems);

      if (this._activeIndex.length) {
        options.activeIndex = this._activeIndex;

        this._setSelectActiveState(multiple, insert, item);
      }

      options.name = name || false;
      options.id = id || false;
      options.required = Boolean(required);
      options.multiple = Boolean(multiple);
      selectItems.forEach(function (selectItem) {
        var value = selectItem.dataset.selectValue;
        var itemInfo = {};
        itemInfo.text = selectItem.innerText;
        itemInfo.value = value;
        options.items.push(itemInfo);
      });
      Object(_utils__WEBPACK_IMPORTED_MODULE_0__["renderElement"])(item, Object(_utils__WEBPACK_IMPORTED_MODULE_0__["createElement"])(Object(_create_select_markup__WEBPACK_IMPORTED_MODULE_1__["createNativeSelectMarkup"])(options)));
      this._selectElement = item;
      this._activeIndex = null;
    }
  }, {
    key: "_setSelectAction",
    value: function _setSelectAction() {
      var _this2 = this;

      if (!this._selectElement) {
        return;
      }

      var button = this._selectElement.querySelector('.custom-select__button');

      var selectItems = this._selectElement.querySelectorAll('.custom-select__item');

      button.addEventListener('click', this._onSelectClick);
      button.addEventListener('keydown', this._onSelectKeydown);
      selectItems.forEach(function (element, index) {
        element.addEventListener('click', function () {
          _this2._onSelectItemClick(element, index);
        });
        element.addEventListener('keydown', function (evt) {
          _this2._onSelectItemKeydown(evt, element, index);
        });

        if (index === selectItems.length - 1) {
          element.addEventListener('keydown', _this2._onLastItemKeydown);
        }
      });
    }
  }, {
    key: "init",
    value: function init() {
      var _this3 = this;

      this._selects = document.querySelectorAll('[data-select]');

      this._selects.forEach(function (select) {
        _this3._createSelectStructure(select);

        _this3._setSelectAction();
      });
    }
  }]);

  return CustomSelect;
}();

/***/ }),

/***/ "./js/modules/select/init.js":
/*!***********************************!*\
  !*** ./js/modules/select/init.js ***!
  \***********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _custom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./custom-select */ "./js/modules/select/custom-select.js");

window.addEventListener('DOMContentLoaded', function () {
  window.addEventListener('load', function () {
    var customSelect = new _custom_select__WEBPACK_IMPORTED_MODULE_0__["CustomSelect"]();
    customSelect.init();
  });
});

/***/ }),

/***/ "./js/modules/select/utils.js":
/*!************************************!*\
  !*** ./js/modules/select/utils.js ***!
  \************************************/
/*! exports provided: createElement, renderElement */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "renderElement", function() { return renderElement; });
var createElement = function createElement(template) {
  var newElement = document.createElement('div');
  newElement.innerHTML = template;
  return newElement.firstChild;
};
var renderElement = function renderElement(container, component) {
  var place = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'beforeend';

  switch (place) {
    case 'prepend':
      container.prepend(component);
      break;

    case 'afterend':
      container.after(component);
      break;

    case 'beforeend':
      container.append(component);
      break;
  }
};

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/*! exports provided: FocusLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusLock", function() { return FocusLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);

    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }

  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;

      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }

        if (this._focusableElements.length === 1) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }

        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();

          this._focusableElements[0].focus();

          return;
        }
      }

      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();

        this._focusableElements[0].focus();
      }

      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();

        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);

      if (!lockedElement) {
        return;
      }

      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;

      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];

      if (this._endElement) {
        this._endElement.blur();
      }

      if (startElement && startFocus) {
        startElement.focus();
      }

      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }

      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);

  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }


var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"];
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");

        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map